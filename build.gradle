/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
//定义版本号
ext {
    springBootVersion = '2.0.4.RELEASE'
}

//buildDir = 'target'

// 所有子项目的通用配置
subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    //apply plugin: 'org.springframework.boot'
    //apply plugin: 'io.spring.dependency-management'

    version = '1.0'
    buildDir = "target"

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

/*    idea.project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }*/

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'



    def env = System.getProperty("profile") ?: "dev"
    def res = env == "dev" ? "resources" : "profile/$env"
    sourceSets {
        main {
            resources {
                srcDirs = ["src/main/resources", "src/main/$res"]
            }
        }
    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url 'http://maven.springframework.org/release' }
        maven { url 'http://maven.springframework.org/milestone' }
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    configurations {
        // 所有需要忽略的包定义在此
        //all*.exclude group: 'commons-httpclient'
        //all*.exclude group: 'commons-logging'
        //all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
        //all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
        //all*.exclude module: 'org.slf4j'
        //all*.exclude module: "slf4j-log4j12"
        //all*.exclude module: "log4j-api"
        //all*.exclude module: "log4j-core"
        //all*.exclude module: "log4j-slf4j-impl"
        //all*.exclude module: 'spring-boot-starter-logging'
        //all*.exclude module: "logback-classic"
    }


    dependencies {
        // 通用依赖

        compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
        compile "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}"
        compile 'org.apache.zookeeper:zookeeper:3.4.9'
//        compile group: 'io.springside', name: 'springside-utils', version: '5.0.0-RC1'
        compileOnly 'org.projectlombok:lombok:1.18.2'
        //compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '1.5.4.RELEASE'
        //compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        //compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'


        // 依赖maven中不存在的jar
        //ext.jarTree = fileTree(dir: 'libs', include: '**/*.jar')
        //ext.rootProjectLibs = new File(rootProject.rootDir, 'libs').getAbsolutePath()
        //ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')

        //compile jarTree

    }

    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}